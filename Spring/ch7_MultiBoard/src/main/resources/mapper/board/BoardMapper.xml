<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.myapp.board.dao.IBoardRepository">

	<select id="selectArticleListByCategory" parameterType="hashmap" resultType="com.example.myapp.board.model.Board">
		SELECT
			board_id AS "boardId",
		    category_id AS "categoryId",
		    writer AS "writer",
		    email AS "email",
		    title AS "title",
		    write_date AS "writeDate",
		    master_id AS "masterId",
		    reply_number AS "replyNumber",
		    reply_step AS "replyStep",
		    read_count AS "readCount"
		FROM (
			SELECT
				board_id, category_id, writer, email, title, write_date, master_id,
				reply_number, reply_step, read_count, rownum as rnum
			FROM (
				SELECT * FROM board
				WHERE category_id = #{categoryId}
				ORDER BY master_id DESC, reply_number, reply_step
			)
		)
		WHERE rnum BETWEEN #{start} AND #{end}
	</select>
	
	<select id="selectTotalArticleCountByCategoryId" parameterType="int" resultType="int">
		SELECT COUNT(board_id) AS "count" FROM board
		WHERE category_id = #{categoryId}
	</select>
	
	<select id="selectArticle" parameterType="int" resultType="com.example.myapp.board.model.Board">
		SELECT
			b.board_id AS "boardId",
		    category_id AS "categoryId",
		    writer AS "writer",
		    email AS "email",
		    title AS "title",
		    content AS "content",
		    write_date AS "writeDate",
		    master_id AS "masterId",
		    reply_number AS "replyNumber",
		    reply_step AS "replyStep",
		    read_count AS "readCount",
		    f.file_id AS "fileId",
		    f.file_name AS "fileName",
		    f.file_size AS "fileSize",
		    f.file_content_type AS "fileContentType"
		FROM board b
		LEFT JOIN board_upload_file f
		ON b.board_id = f.board_id
		WHERE b.board_id = #{boardId}
	</select>
	
	<update id="updateReadCount" parameterType="int">
		UPDATE board SET read_count = read_count + 1 WHERE board_id = #{boardId}
	</update>
	
	<select id="selectMaxArticleNo" resultType="int">
		SELECT NVL(MAX(board_id), 0) AS "articleNo" FROM board
	</select>
	
	<select id="selectMaxFileNo" resultType="int">
		SELECT NVL(MAX(file_id), 0) AS "fileId" FROM board_upload_file
	</select>
	
	<insert id="insertArticle" parameterType="com.example.myapp.board.model.Board">
		INSERT INTO board
			(board_id, category_id, writer, email, password, title, content, 
			write_date, master_id, reply_number, reply_step)
		VALUES
			(#{boardId}, #{categoryId}, #{writer}, #{email}, #{password}, #{title}, #{content}, 
			sysdate, #{boardId}, 0, 0)
	</insert>
	
	<insert id="insertFileData" parameterType="com.example.myapp.board.model.BoardUploadFile">
		INSERT INTO board_upload_file
			(file_id, board_id, file_name, file_size, file_content_type, file_data)
		VALUES
			(#{fileId}, #{boardId}, #{fileName}, #{fileSize}, #{fileContentType}, #{fileData})
	</insert>
	
	<select id="getFile" parameterType="int" resultType="com.example.myapp.board.model.BoardUploadFile">
		SELECT
			file_id AS "fileId",
			board_id AS "boardId",
			file_name AS "fileName",
			file_size AS "fileSize",
			file_content_type AS "fileContentType",
			file_data AS "fileDate"
		FROM board_upload_file
		WHERE file_id = #{fileId}
	</select>
	
	<update id="updateReplyNumber">
	<![CDATA[
		UPDATE board SET reply_number = reply_number + 1
		WHERE master_id = #{masterId} AND reply_number > #{replyNumber}
	]]>
	</update>
	
	<insert id="replyArticle" parameterType="com.example.myapp.board.model.Board">
		INSERT INTO board
			(board_id, category_id, writer, email, password, title, content, 
			write_date, master_id, reply_number, reply_step)
		VALUES
			(#{boardId}, #{categoryId}, #{writer}, #{email}, #{password}, #{title}, #{content}, 
			sysdate, #{masterId}, #{replyNumber}, #{replyStep})
	</insert>
	
	<select id="getPassword" parameterType="int" resultType="string">
		SELECT password FROM board WHERE board_id = #{boardId}
	</select>
	
	<update id="updateArticle" parameterType="com.example.myapp.board.model.Board">
		UPDATE board
		SET
			category_id=#{categoryId}, writer=#{writer}, email=#{email}, 
			title=#{title}, content=#{content}, write_date=SYSDATE
		WHERE board_id = #{boardId}
	</update>
	
	<update id="updateFileData" parameterType="com.example.myapp.board.model.BoardUploadFile">
		UPDATE board_upload_file
		SET
			file_name=#{fileName}, file_size=#{fileSize}, 
			file_content_type=#{fileContentType}, file_data=#{fileData}
		WHERE file_id = #{fileId}
	</update>
	
	<select id="selectDeleteArticle" parameterType="int" resultType="com.example.myapp.board.model.Board">
		SELECT
		    category_id AS "categoryId",
		    master_id AS "masterId",
		    reply_number AS "replyNumber"
		FROM board
		WHERE board_id = #{boardId}
	</select>
	
	<delete id="deleteFileData" parameterType="int">
		DELETE FROM board_upload_file
		WHERE EXISTS (SELECT board_id FROM board b
					 WHERE b.board_id = #{boardId}
					 AND b.board_id = board_upload_file.board_id)
	</delete>
	
	<delete id="deleteReplyFileData" parameterType="int">
		DELETE FROM board_upload_file
		WHERE EXISTS (SELECT board_id FROM board b
					 WHERE b.master_id = #{boardId}
					 AND b.board_id = board_upload_file.board_id)
	</delete>
	
	<delete id="deleteArticleByBoardId" parameterType="int">
		DELETE FROM board WHERE board_id = #{boardId}
	</delete>
	
	<delete id="deleteArticleByMasterId" parameterType="int">
		DELETE FROM board WHERE master_id = #{boardId}
	</delete>
	
	<select id="searchListByContentKeyword" resultType="com.example.myapp.board.model.Board">
		SELECT
			board_id AS "boardId",
		    category_id AS "categoryId",
		    writer AS "writer",
		    email AS "email",
		    title AS "title",
		    write_date AS "writeDate",
		    master_id AS "masterId",
		    reply_number AS "replyNumber",
		    reply_step AS "replyStep",
		    read_count AS "readCount"
		FROM (
			SELECT
				board_id, category_id, writer, email, title, write_date, master_id,
				reply_number, reply_step, read_count, rownum as rnum
			FROM (
				SELECT * FROM board
				WHERE title LIKE #{keyword} OR content LIKE #{keyword}
				ORDER BY master_id DESC, reply_number, reply_step
			)
		)
		WHERE rnum BETWEEN #{start} AND #{end}
	</select>
	
	<select id="selectTotalArticleCountByKeyword" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM board
		WHERE title LIKE #{keyword} OR content LIKE #{keyword}
	</select>
	
	<select id="selectTotalArticleCount" resultType="int">
		SELECT COUNT(board_id) AS "count" FROM board
	</select>

</mapper>